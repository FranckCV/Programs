
# General

# @app.context_processor
# def inject_globals():
#     categoriasMenu = controlador_categorias.obtener_categorias_disponibles()
#     marcasMenu = controlador_marcas.obtener_marcas_menu(10) 
#     logo_foto = logo_domus
#     redes_footer = controlador_redes_sociales.obtener_redes_sociales()
#     conts_info_footer = controlador_contenido_info.obtener_tipos_contenido()
#     datos_domus_main = controlador_informacion_domus.obtener_informacion_domus()
#     logueado_dato = session.get('id') is not None
#     user_id = session.get('id') if logueado_dato else None 
#     lista_deseos = controlador_lista_deseos.obtenerListaDeseos(session.get('id'))
#     lista_deseos_ids = [producto[0] for producto in lista_deseos] 
#     return dict(
#         marcasMenu=marcasMenu,
#         logo_foto=logo_foto,
#         categoriasMenu=categoriasMenu,
#         redes_footer=redes_footer,
#         conts_info_footer=conts_info_footer,
#         datos_domus_main=datos_domus_main,
#         logueado=logueado_dato,
#         user_id=user_id , 
#         lista_deseos_ids=lista_deseos_ids
#     )


# @app.route("/") #falta
# def index():
#     marcasBloque = controlador_marcas.obtener_marcas_index(10)
#     productosRecientes = controlador_productos.obtenerEnTarjetasMasRecientes()
#     productosPopulares = controlador_productos.obtenerEnTarjetasMasPopulares()
#     novedadesBanner = controlador_novedades.obtenerBannersNovedadesRecientes()
#     novedadesRecientes = controlador_novedades.obtenerNovedadesRecientes()
#     # print(lista_deseos_ids)
#     return render_template("index.html", 
#                            novedadesRecientes=novedadesRecientes, 
#                            marcasBloque=marcasBloque,
#                            productosRecientes=productosRecientes, 
#                            productosPopulares=productosPopulares,
#                            novedadesBanner=novedadesBanner)


# @app.route("/nuestras_marcas")
# def nuestras_marcas():
#     marcas = []
#     valor = request.args.get("ctlg_products_order")  # Obtener el valor del orden

#     if valor:
#         if valor == "1": 
#             marcas = controlador_marcas.obtener_todas_marcas_recientes()
#         elif valor == "2": 
#             marcas = controlador_marcas.obtener_todas_marcas_alfabetico(0)
#         elif valor == "3": 
#             marcas = controlador_marcas.obtener_todas_marcas_alfabetico(1)
#     else:
#         marcas = controlador_marcas.obtener_todas_marcas_recientes() 

#     return render_template("nuestras_marcas.html", marcas = marcas)


# @app.route("/catalogo")
# def catalogo():
#     productos = []
#     valor = request.args.get("ctlg_products_order")  # Obtener el valor del orden

#     if valor:
#         if valor == "1":  # Más Recientes
#             productos = controlador_productos.obtenerEnTarjetasMasRecientes()
#         elif valor == "2":  # Más Populares
#             productos = controlador_productos.obtenerEnTarjetasMasPopulares_catalogo()
#         elif valor == "3":  # Menor Precio
#             productos = controlador_productos.obtenerEnTarjetasxPrecio(0)
#         elif valor == "4":  # Mayor Precio
#             productos = controlador_productos.obtenerEnTarjetasxPrecio(1)
#         elif valor == "5":  # A - Z
#             productos = controlador_productos.obtenerEnTarjetasAlfabetico(0)
#         elif valor == "6":  # Z - A
#             productos = controlador_productos.obtenerEnTarjetasAlfabetico(1)
#     else:
#         productos = controlador_productos.obtenerEnTarjetasMasRecientes()  # Valor predeterminado

#     categoriasFiltro = controlador_categorias.obtener_categorias_subcategorias()
#     return render_template("catalogo.html", productos=productos, categoriasFiltro=categoriasFiltro)


# @app.route("/buscar")
# def buscar_elementos():
#     nombreBusqueda = request.args.get("buscarElemento")
#     productos = controlador_productos.buscarEnTarjetasMasRecientes(nombreBusqueda)
#     categoriasFiltro = controlador_categorias.obtener_categorias_subcategorias()   
#     return render_template("catalogo.html", productos = productos, categoriasFiltro = categoriasFiltro , nombreBusqueda = nombreBusqueda)


# @app.route("/novedades") 
# def novedades():
#     novedades_promo = controlador_novedades.mostrarNovedadesxTipo(3,5)
#     novedades_anun = controlador_novedades.mostrarNovedadesxTipo(1,5)
#     novedades_avis = controlador_novedades.mostrarNovedadesxTipo(2,5)
#     productosOfertas = controlador_productos.obtenerEnTarjetasOfertas()
#     return render_template("novedades.html" , productosOfertas = productosOfertas , novedades_promo = novedades_promo , novedades_anun = novedades_anun , novedades_avis = novedades_avis)


# @app.route("/promociones") 
# def promociones():
#     promociones = controlador_novedades.mostrarNovedadesPromociones()
#     if promociones:
#         return render_template("promociones.html" , promociones = promociones)
#     else:
#         return redirect("/error")


# @app.route('/anuncios')
# def anuncios():
#     anuncios = controlador_novedades.mostrarNovedadesxTipo(1,0)
#     if anuncios:
#         return render_template('anuncios.html', anuncios=anuncios)
#     else:
#         return redirect("/error")
    

# @app.route('/avisos')
# def avisos():
#     avisos = controlador_novedades.mostrarNovedadesxTipo(2,0)
#     if avisos:
#         return render_template('avisos.html', avisos=avisos)
#     else:
#         return redirect("/error")


# @app.route("/error") 
# def error():
#     return render_template("error.html")



# @app.context_processor
# def inject_globals():
#     categoriasMenu = controlador_categorias.obtener_categorias_disponibles()
#     marcasMenu = controlador_marcas.obtener_marcas_menu(10) 
#     logo_foto = logo_domus
#     redes_footer = controlador_redes_sociales.obtener_redes_sociales()
#     conts_info_footer = controlador_contenido_info.obtener_tipos_contenido()
#     datos_domus_main = controlador_informacion_domus.obtener_informacion_domus()
#     logueado_dato = session.get('id') is not None
#     user_id = session.get('id') if logueado_dato else None 
#     lista_deseos = controlador_lista_deseos.obtenerListaDeseos(session.get('id'))
#     lista_deseos_ids = [producto[0] for producto in lista_deseos] 
#     return dict(
#         marcasMenu=marcasMenu,
#         logo_foto=logo_foto,
#         categoriasMenu=categoriasMenu,
#         redes_footer=redes_footer,
#         conts_info_footer=conts_info_footer,
#         datos_domus_main=datos_domus_main,
#         logueado=logueado_dato,
#         user_id=user_id , 
#         lista_deseos_ids=lista_deseos_ids
#     )

# @app.route("/dashboard")
# def dashboard():
#     return render_template("dashboard.html")



